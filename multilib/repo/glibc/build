#!/bin/sh -e

:>nostrip # disable stripping for use with valgrind

# Build cannot happen without optimizations.
export CFLAGS="${CFLAGS:--Os}"

patch -p1 < make-4.4.patch

# Build must happen outside of glibc source.
mkdir -p glibc-build lib32-glibc-build

( # 64-bit
	cd glibc-build

	../configure \
		--prefix=/usr \
		--libdir=/usr/lib \
		--libexecdir=/usr/lib \
		--enable-bind-now \
		--enable-multi-arch \
		--enable-stack-protector=strong \
		--disable-nscd \
		--disable-profile \
		--disable-werror \
		libc_cv_include_x86_isa_level=no \
		libc_cv_have_x86_lahf_sahf=no \
		libc_cv_have_x86_movbe=no

	printf "%s\n" \
		"slibdir=/usr/lib" \
		"rtlddir=/usr/lib" \
		"sbindir=/usr/bin" \
		"rootsbindir=/usr/bin" > defconfigparms

	cp defconfigparms configparms
	echo "build-programs=no" >> configparms

	# Build libs without fortify
	CFLAGS="$CFLAGS -U_FORTIFY_SOURCE" \
	CPPFLAGS="$CPPFLAGS -U_FORTIFY_SOURCE" \
		make -O

	cp defconfigparms configparms
	echo "build-programs=yes" >> configparms

	make -O
	make DESTDIR="$1" install
)

( # 32-bit
	cd lib32-glibc-build

	export CC="$CC -m32 -mstackrealign"
	export CXX="$CXX -m32 -mstackrealign"

	../configure \
		--host=i686-pc-linux-gnu \
		--prefix=/usr \
		--libdir=/usr/lib32 \
		--libexecdir=/usr/lib32 \
		--enable-bind-now \
		--enable-multi-arch \
		--enable-stack-protector=strong \
		--disable-nscd \
		--disable-profile \
		--disable-werror \
		libc_cv_include_x86_isa_level=no \
		libc_cv_have_x86_lahf_sahf=no \
		libc_cv_have_x86_movbe=no

	printf "%s\n" \
		"slibdir=/usr/lib32" \
		"rtlddir=/usr/lib32" \
		"sbindir=/usr/bin" \
		"rootsbindir=/usr/bin" > defconfigparms

	cp defconfigparms configparms
	echo "build-programs=no" >> configparms

	# Build libs without fortify
	CFLAGS="$CFLAGS -U_FORTIFY_SOURCE" \
	CPPFLAGS="$CPPFLAGS -U_FORTIFY_SOURCE" \
		make -O

	cp defconfigparms configparms
	echo "build-programs=yes" >> configparms

	make -O
	make DESTDIR="$1" install
)

mkdir -p "$1/usr/lib"
ln -s "/usr/lib32/ld-linux.so.2" "$1/usr/lib/"

rm -f "$1/var/db/Makefile" "$1/etc/ld.so.cache"

mkdir -p "$1/usr/lib/locale" "$1/etc/ld.so.conf.d"
printf "en_US.UTF-8 UTF-8\n" > "$1/etc/locale.gen"
printf "/usr/lib32\n" > "$1/etc/ld.so.conf.d/lib32-glibc.conf"

cp posix/gai.conf nss/nsswitch.conf "$1/etc/"

for script in ldd locale-gen sotruss; do
	cp -f "sh-alternatives/$script" "$1/usr/bin/$script"
	chmod +x "$1/usr/bin/$script"
done
